@import './config.scss';

// BEM - block
@mixin block($block) {
  $currentSelector: $namespace + '-' + $block;

  .#{$currentSelector} {
    @content;
  }
}

// BEM - element
@mixin element($element) {
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + & + $element-separator + $unit + ','};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

// BEM - modifier
@mixin modifier($modifier) {
  $currentSelector: '';

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ','};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

// 响应式 - 阀值
$--sm: 768px !default;
$--md: 992px !default;
$--lg: 1200px !default;
$--xl: 1920px !default;
// !default 的意思: 假如之前定义过此变量就使用之前的变量

// 响应式 - 媒体查询样式
$--breakPointers: (
  xs: (
    max-width: $--sm - 1,
  ),
  sm: (
    min-width: $--sm,
  ),
  md: (
    min-width: $--md,
  ),
  lg: (
    min-width: $--lg,
  ),
  xl: (
    min-width: $--xl,
  ),
);

// 响应式 - 生成媒体查询相关样式
@mixin responsive($key, $map: $--breakPointers) {
  @if map-has-key($map, $key) {
    @media #{map-get($map, $key)} {
      @content;
    }
  } @else {
    @warn 'media query key not exist: ' + $key;
  }
}
